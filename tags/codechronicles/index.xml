<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codechronicles on zentechnista</title>
    <link>https://zentechnista.github.io/tags/codechronicles/</link>
    <description>Recent content in Codechronicles on zentechnista</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Jul 2017 19:11:03 -0400</lastBuildDate>
    
	<atom:link href="https://zentechnista.github.io/tags/codechronicles/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ten Minutes Of Go</title>
      <link>https://zentechnista.github.io/2017/07/ten-minutes-of-go/</link>
      <pubDate>Sun, 30 Jul 2017 19:11:03 -0400</pubDate>
      
      <guid>https://zentechnista.github.io/2017/07/ten-minutes-of-go/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s probably no secret by now that I am a big fan of Go (also known as Golang), an open source programming language that is known for its speed and efficiency. As we move towards &lt;a href=&#34;https://blog.golang.org/toward-go2&#34;&gt;Go 2&lt;/a&gt; and the eventual nuances and challenges that will come with its newest iteration, I want to take a few minutes to talk about what I think makes Go so special.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>151 Days Of Code</title>
      <link>https://zentechnista.github.io/2017/07/151-days-of-code/</link>
      <pubDate>Sat, 29 Jul 2017 09:03:59 -0400</pubDate>
      
      <guid>https://zentechnista.github.io/2017/07/151-days-of-code/</guid>
      <description>&lt;p&gt;Like many, I started off 2017 with the #100DaysOfCode challenge. For the uninitiated, the &lt;a href=&#34;http://www.100daysofcode.com/&#34;&gt;100DaysOfCode&lt;/a&gt; challengen involves coding a minimum of an hour each day, and tweeting your progress about what you&amp;rsquo;ve been working on and accomplished. While the focus of the challenge is to work on projects everyday, a mix of projecs and tutorials are still sufficient if you need some input before starting your next challenge.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lessons in Programming: Giving Yourself Credit</title>
      <link>https://zentechnista.github.io/2017/07/lessons-in-programming-giving-yourself-credit/</link>
      <pubDate>Mon, 24 Jul 2017 06:52:10 -0400</pubDate>
      
      <guid>https://zentechnista.github.io/2017/07/lessons-in-programming-giving-yourself-credit/</guid>
      <description>&lt;p&gt;&lt;em&gt;Author&amp;rsquo;s note: This post was originally titled &amp;ldquo;you&amp;rsquo;re awesome and should feel awesome&amp;rdquo;, but I realized that might be a bit of a mouthful.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For nearly all people who are learning to code on a non-traditional path (self study, bootcamps, etc.) it&amp;rsquo;s easy to experience feelings of doubt and discouragement. Not only can it be difficult going through the basics - picking a language, finding a good resource, and sticking to it without the structure of more traditional learning.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lessons in Programming: Learning To Get Uncomfortable</title>
      <link>https://zentechnista.github.io/2017/07/lessons-in-programming-learning-to-get-uncomfortable/</link>
      <pubDate>Sun, 23 Jul 2017 00:49:02 -0400</pubDate>
      
      <guid>https://zentechnista.github.io/2017/07/lessons-in-programming-learning-to-get-uncomfortable/</guid>
      <description>&lt;p&gt;&amp;ldquo;Learning to get uncomfortable.&amp;rdquo; Kind of a weird article topic for a blog post right? There&amp;rsquo;s tons of articles on FOMO (Fear of Missing Out for the uninitiated), ignoring FOMO, sticking on the path of mastery, never giving up, knowing how to give up, etc.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>